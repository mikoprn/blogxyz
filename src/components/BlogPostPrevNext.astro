---
import { getCollection } from "astro:content";

const posts = (await getCollection("blog")).sort(
    (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

const currentPostIndex = posts.findIndex(
    (post) => post.id == Astro.params.slug,
);
const previousPost =
    currentPostIndex + 1 === posts.length
        ? undefined
        : posts[currentPostIndex + 1];
const nextPost =
    currentPostIndex === 0 ? undefined : posts[currentPostIndex - 1];
---

{
    (previousPost || nextPost) && (
        <nav class="prev-next-post" aria-label="BlogPost-Prev-Next">
            {previousPost && (
                <p class="prev-next-link">
                    Previous Post :{" "}
                    <a href={`/blog/${previousPost.id}/`} class="p">
                        {previousPost.data.title}
                    </a>
                </p>
            )}
            
            {nextPost && (
                <p class="prev-next-link">
                    Next Post :{" "}
                    <a href={`/blog/${nextPost.id}/`} class="p">{nextPost.data.title}</a>
                </p>
            )}
        </nav>
    )
}

<style>
    .prev-next-post {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        align-items: center;
        gap: var(--clamp-5-base);
    }

    .prev-next-link {
        opacity: 1;
        background-color: var(--light-base);
        padding: 1em;
        border-radius: var(--size-x-small);
    }

    :global(.darkmode) .prev-next-link{
       background-color: var(--dark-accent);
    }

    /* 700px */
    @media (max-width: 43.75em) {
        .prev-next-post {
            gap: var(--clamp-2-base);
        }
        
        .prev-next-link {
            width: 100%;
        }
    }
</style>
